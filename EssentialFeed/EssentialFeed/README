
// *** BDD Stories *** //


// Narrative #1

    As an online customer
    I want my app to automaticaly load my latest image feed
    So I can enjoy the newest images of my friends

- Scenarios (Acceptance criteria)

    Given the customer has connectivity
    When the customer requests to see the feed
    Then the app should display the latest feed from remote
    And replace the cache with the new feed

// Narrative #2

    As an offline customer
    I want my app to show the latest saved version of my image feed
    So I can always enjoy images of my friends

- Scenarios (Acceptance criteria)

    Given the customer has no connectivity
    And there's a cached version of the feed
    And the cache is less than seven days old
    When the customer requests to see the feed
    Then the app should display the latest feed saved

    Given the customer has no connectivity
    And there's a cached version of the feed
    And the cache is seven days old or more
    When the customer requests to see the feed
    Then the app should display the error message

    Given the customer has no connectivity
    And the cache is empty
    When the customer requests to see the feed
    Then the app should display an error message




// *** Use Cases *** //


// Load Feed From Remote Use Case

- Data(Input)
    * URL

- Primary course (Happy path):

    1. Execute "Load Image Feed" command with above data.
    2. System downloads data from the URL.
    3. System validates downloaded data.
    4. System creates image feed from valid data.
    5. System delivers image feed.
    
- Invalid data (Sad path):

    1. System delivers invalid data error.
    
- No connectivity (Sad path):

    1. System delivers connectivity error.
    
    
// Load Feed From Cache Use Case

- Data(Input)
    * Max age (7 days)

- Primary course (Happy path):

    1. Execute "Load Image Feed" command with above data.
    2. System retrieves feed data from cache.
    3. System validates cache is less than seven days old.
    4. System creates image feed from cached data.
    5. System delivers image feed.

- Retrieval error course (Sad path):
    1. System delivers error.

- Expired cache course (Sad path):
    1. System delivers no feed images.

- No cache course (Sad path):
    1. System delivers no feed images.
    
    
// Validate Feed Cache Use Case

- Primary course (Happy path):

    1. Execute "Validate Cache" command with above data.
    2. System retrieves feed data from cache.
    3. System validates cache is less than seven days old.

- Retrieval error course (Sad path):
    1. System deletes old cache.

- Expired cache course (Sad path):
    1. System deletes old cache.
    
// Cache Feed Use Case

- Data(Input)
    * Image Feed
    
- Primary course (Happy path):

    1. Execute "Save Image Feed" command with above data.
    2. System deletes the old cache data.
    3. System encodes image feed.
    4. System timestamps the new cache.
    5. System saves the new cache data.
    6. System delivers a success message.

- Cache deletion failure (Sad path):

    1. System delivers error.

- Saving error cource (Sad path):

    1. System delivers errro.


// *** Feed Store implementation Inbox *** //

✅ Insert
    ✅ To empty cache works
    ✅ To non-empty cache overrides previous value
    ✅ Error (if possible to simulate, e.g., no write permission)

✅ Retrieve
    ✅ Empty cache works (before something is inserted)
    ✅ Empty cache twice returns empty cache
    ✅ Non-empty cache returns data
    ✅ Non-empty cache twice returns same data (retrieve should have no side-effects)
    ✅ Error returns error (if possible to simulate, e.g., invalid data)
    ✅ Error twice returns the same error (if possible to simulate, e.g., invalid data)

✅ Delete
    ✅ Empty cache does nothing (cache stays empty and does not fail)
    ✅ Inserted data leaves cache empty
    ✅ Error (if possible to simulate, e.g., no write permission)

✅ Side-effects must run serially to avoid race-conditions (deleting the wrong cache... overriding the latest data...)




// *** UX goals for the Feed UI experience

[✅] Load feed automatically when view is visible
[✅] Allow customer to manually reload feed (pull to refresh)
[✅] Show a loading indicator while loading feed
[ ] Render all loaded feed items (location, image, description)
[ ] Image loading experience
    [ ] Load when image view is visible (on screen)
    [ ] Cancel when image view is out of screen
    [ ] Show a loading indicator while loading image (shimmer)
    [ ] Option to retry on image download error
    [ ] Preload when image view is near visible
